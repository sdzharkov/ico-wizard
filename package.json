{
  "name": "oracles",
  "version": "0.1.0",
  "private": true,
  "devDependencies": {
    "babel-plugin-transform-decorators-legacy": "^1.3.4",
    "babel-preset-env": "^1.6.0",
    "babel-preset-es2015": "^6.24.1",
    "babel-preset-react": "^6.24.1",
    "babel-preset-stage-1": "^6.24.1",
    "gulp": "^3.9.1",
    "gulp-add-src": "^0.2.0",
    "gulp-autoprefixer": "^3.1.1",
    "gulp-babel": "^7.0.0",
    "gulp-concat": "^2.6.1",
    "gulp-include": "^2.3.1",
    "gulp-order": "^1.1.1",
    "gulp-postcss": "^6.2.0",
    "gulp-sass": "^2.3.2",
    "gulp-sass-glob": "^1.0.6",
    "gulp-uglify": "^2.0.0",
    "gulp-uglifycss": "^1.0.6",
    "gulp-util": "^3.0.8"
  },
  "dependencies": {
    "autoprefixer": "7.1.1",
    "babel-core": "6.25.0",
    "babel-eslint": "7.2.3",
    "babel-jest": "20.0.3",
    "babel-loader": "7.0.0",
    "babel-preset-react-app": "^3.0.1",
    "babel-runtime": "6.23.0",
    "case-sensitive-paths-webpack-plugin": "2.1.1",
    "chalk": "1.1.3",
    "clipboard": "^1.7.1",
    "css-loader": "0.28.4",
    "dotenv": "4.0.0",
    "eslint": "3.19.0",
    "eslint-config-react-app": "^1.0.5",
    "eslint-loader": "1.7.1",
    "eslint-plugin-flowtype": "2.34.0",
    "eslint-plugin-import": "2.2.0",
    "eslint-plugin-jsx-a11y": "5.0.3",
    "eslint-plugin-react": "7.1.0",
    "ethereumjs-abi": "^0.6.4",
    "ethereumjs-testrpc": "^4.1.3",
    "extract-text-webpack-plugin": "2.1.2",
    "file-loader": "0.11.2",
    "fs-extra": "3.0.1",
    "html-webpack-plugin": "2.29.0",
    "install": "^0.10.1",
    "jest": "20.0.4",
    "jquery": "^3.2.1",
    "jspdf": "^1.3.3",
<<<<<<< HEAD
=======
    "markdown-toc": "^1.2.0",
>>>>>>> upstream/master
    "mobx": "^3.3.0",
    "mobx-react": "^4.3.3",
    "npm": "^5.3.0",
    "object-assign": "4.1.1",
    "oracles-combine-solidity": "file:submodules/oracles-combine-solidity",
    "path": "^0.12.7",
    "postcss-flexbugs-fixes": "3.0.0",
    "postcss-loader": "2.0.6",
    "promise": "7.1.1",
    "react": "^15.6.1",
    "react-countdown-clock": "^2.0.0",
    "react-dev-utils": "^3.0.2",
    "react-dom": "^15.6.1",
    "react-error-overlay": "^1.0.9",
    "react-router-dom": "^4.1.2",
    "replaceall": "^0.1.6",
    "solc": "^0.4.14",
    "style-loader": "0.18.2",
    "sw-precache-webpack-plugin": "0.11.3",
    "sweetalert": "^1.1.3",
    "truffle": "^3.4.9",
    "url-loader": "0.5.9",
    "web3": "^0.19.1",
    "webpack": "2.6.1",
    "webpack-dev-server": "2.5.0",
    "webpack-manifest-plugin": "1.1.0",
    "whatwg-fetch": "2.0.3",
    "zeppelin-solidity": "^1.2.0"
  },
  "config": {
    "contract_folder": "./public/contracts",
    "combine_solidity_script": "submodules/oracles-combine-solidity/index.js",
    "extension_path": "./scripts/OraclesExtendedCrowdSale.sol",
    "zeppelin_path": "node_modules/zeppelin-solidity/contracts/crowdsale/",
    "tokenmarketnet_path": "submodules/oracles-token-market-net-ico/contracts/",
    "token_transfer_proxy_contract_name": "TokenTransferProxy",
    "multisig_contract_name": "MultiSigWalletWithTimeLockExceptRemoveAuthorizedAddress",
    "null_finalize_agent_contract_name": "NullFinalizeAgentExt",
    "finalize_agent_contract_name": "ReservedTokensFinalizeAgent",
    "standard_crowdsale_contract_name": "SampleCrowdsale",
    "standard_crowdsale_token_contract_name": "SampleCrowdsaleToken",
    "crowdsale_contract_name": "MintedTokenCappedCrowdsaleExt",
    "crowdsale_token_contract_name": "CrowdsaleTokenExt",
    "crowdsale_pricing_strategy_contract_name": "FlatPricingExt",
    "safe_math_lib_contract_name": "SafeMathLibExt"
  },
  "scripts": {
    "startReact": "node build_scripts/start.js",
    "start": "npm run generateFlatSoliditySafeMathLibContract && npm run generateFlatSolidityCrowdsaleNullFinalizeAgentContract && npm run generateFlatSolidityCrowdsaleFinalizeAgentContract && npm run generateFlatSolidityCrowdsaleContract && npm run generateFlatSolidityCrowdsaleTokenContract && npm run generateFlatSolidityCrowdsalePricingStrategyContract && npm run compileSafeMathLibExtContract && npm run compileCrowdsaleNullFinalizeAgentContract && npm run compileCrowdsaleFinalizeAgentContract && npm run compileCrowdsaleContract && npm run compileCrowdsaleTokenContract && npm run compileCrowdsalePricingStrategyContract && node build_scripts/start.js",
    "build": "git submodule update --init --recursive --remote && npm run generateFlatSoliditySafeMathLibContract && npm run generateFlatSolidityCrowdsaleNullFinalizeAgentContract && npm run generateFlatSolidityCrowdsaleFinalizeAgentContract && npm run generateFlatSolidityCrowdsaleContract && npm run generateFlatSolidityCrowdsaleTokenContract && npm run generateFlatSolidityCrowdsalePricingStrategyContract && npm run compileSafeMathLibExtContract && npm run compileCrowdsaleNullFinalizeAgentContract && npm run compileCrowdsaleFinalizeAgentContract && npm run compileCrowdsaleContract && npm run compileCrowdsaleTokenContract && npm run compileCrowdsalePricingStrategyContract && node build_scripts/build.js",
    "test": "bash ./start_testrpc.sh && cd ./submodules/oracles-token-market-net-ico/ && npm install && node_modules/.bin/truffle migrate --network testrpc && node_modules/.bin/truffle test --network testrpc",
    "generateFlatSolidityTokenTransferProxyContract": "node $npm_package_config_combine_solidity_script $npm_package_config_0xproject_path/TokenTransferProxy.sol $npm_package_config_contract_folder TokenTransferProxy",
    "generateFlatSolidityMultiSigContract": "node $npm_package_config_combine_solidity_script $npm_package_config_0xproject_path/MultiSigWalletWithTimeLockExceptRemoveAuthorizedAddress.sol $npm_package_config_contract_folder MultiSig",
    "generateFlatSolidityStandardCrowdsaleContract": "node $npm_package_config_combine_solidity_script $npm_package_config_zeppelin_path/Crowdsale.sol $npm_package_config_contract_folder CrowdsaleStandard",
    "generateFlatSolidityStandardCrowdsaleTokenContract": "node $npm_package_config_combine_solidity_script $npm_package_config_zeppelin_path/Crowdsale.sol $npm_package_config_contract_folder CrowdsaleStandardToken",
    "generateFlatSoliditySafeMathLibContract": "node $npm_package_config_combine_solidity_script $npm_package_config_tokenmarketnet_path/$npm_package_config_safe_math_lib_contract_name.sol $npm_package_config_contract_folder SafeMathLibExt",
    "generateFlatSolidityCrowdsaleContract": "node $npm_package_config_combine_solidity_script $npm_package_config_tokenmarketnet_path/$npm_package_config_crowdsale_contract_name.sol $npm_package_config_contract_folder CrowdsaleWhiteListWithCap",
    "generateFlatSolidityCrowdsaleTokenContract": "node $npm_package_config_combine_solidity_script $npm_package_config_tokenmarketnet_path/$npm_package_config_crowdsale_token_contract_name.sol $npm_package_config_contract_folder CrowdsaleWhiteListWithCapToken",
    "generateFlatSolidityCrowdsalePricingStrategyContract": "node $npm_package_config_combine_solidity_script $npm_package_config_tokenmarketnet_path/$npm_package_config_crowdsale_pricing_strategy_contract_name.sol $npm_package_config_contract_folder CrowdsaleWhiteListWithCapPricingStrategy",
    "generateFlatSolidityCrowdsaleNullFinalizeAgentContract": "node $npm_package_config_combine_solidity_script $npm_package_config_tokenmarketnet_path/$npm_package_config_null_finalize_agent_contract_name.sol $npm_package_config_contract_folder NullFinalizeAgent",
    "generateFlatSolidityCrowdsaleFinalizeAgentContract": "node $npm_package_config_combine_solidity_script $npm_package_config_tokenmarketnet_path/$npm_package_config_finalize_agent_contract_name.sol $npm_package_config_contract_folder FinalizeAgent",
    "compileSafeMathLibExtContract": "node ./scripts/compileContract.js $npm_package_config_contract_folder/SafeMathLibExt_flat.sol $npm_package_config_contract_folder $npm_package_config_extension_path false $npm_package_config_safe_math_lib_contract_name SafeMathLibExt",
    "compileTokenTransferProxyContract": "node ./scripts/compileContract.js $npm_package_config_contract_folder/TokenTransferProxy_flat.sol $npm_package_config_contract_folder $npm_package_config_extension_path false $npm_package_config_token_transfer_proxy_contract_name TokenTransferProxy",
    "compileMultisigContract": "node ./scripts/compileContract.js $npm_package_config_contract_folder/MultiSig_flat.sol $npm_package_config_contract_folder $npm_package_config_extension_path false $npm_package_config_multisig_contract_name MultiSig",
    "compileStandardCrowdsaleContract": "node ./scripts/compileContract.js $npm_package_config_contract_folder/CrowdsaleStandard_flat.sol $npm_package_config_contract_folder $npm_package_config_extension_path true $npm_package_config_standard_crowdsale_contract_name CrowdsaleStandard",
    "compileStandardCrowdsaleTokenContract": "node ./scripts/compileContract.js $npm_package_config_contract_folder/CrowdsaleStandardToken_flat.sol $npm_package_config_contract_folder $npm_package_config_extension_path true $npm_package_config_standard_crowdsale_token_contract_name CrowdsaleStandardToken",
    "compileCrowdsaleContract": "node ./scripts/compileContract.js $npm_package_config_contract_folder/CrowdsaleWhiteListWithCap_flat.sol $npm_package_config_contract_folder $npm_package_config_extension_path false $npm_package_config_crowdsale_contract_name CrowdsaleWhiteListWithCap",
    "compileCrowdsaleTokenContract": "node ./scripts/compileContract.js $npm_package_config_contract_folder/CrowdsaleWhiteListWithCapToken_flat.sol $npm_package_config_contract_folder $npm_package_config_extension_path false $npm_package_config_crowdsale_token_contract_name CrowdsaleWhiteListWithCapToken",
    "compileCrowdsalePricingStrategyContract": "node ./scripts/compileContract.js $npm_package_config_contract_folder/CrowdsaleWhiteListWithCapPricingStrategy_flat.sol $npm_package_config_contract_folder $npm_package_config_extension_path false $npm_package_config_crowdsale_pricing_strategy_contract_name CrowdsaleWhiteListWithCapPricingStrategy",
    "compileCrowdsaleNullFinalizeAgentContract": "node ./scripts/compileContract.js $npm_package_config_contract_folder/NullFinalizeAgent_flat.sol $npm_package_config_contract_folder $npm_package_config_extension_path false $npm_package_config_null_finalize_agent_contract_name NullFinalizeAgent",
    "compileCrowdsaleFinalizeAgentContract": "node ./scripts/compileContract.js $npm_package_config_contract_folder/FinalizeAgent_flat.sol $npm_package_config_contract_folder $npm_package_config_extension_path false $npm_package_config_finalize_agent_contract_name FinalizeAgent"
  },
  "jest": {
    "collectCoverageFrom": [
      "src/**/*.{js,jsx}"
    ],
    "setupFiles": [
      "<rootDir>/config/polyfills.js"
    ],
    "testMatch": [
      "<rootDir>/src/**/__tests__/**/*.js?(x)",
      "<rootDir>/src/**/?(*.)(spec|test).js?(x)"
    ],
    "testEnvironment": "node",
    "testURL": "http://localhost",
    "transform": {
      "^.+\\.(js|jsx)$": "<rootDir>/node_modules/babel-jest",
      "^.+\\.css$": "<rootDir>/config/jest/cssTransform.js",
      "^(?!.*\\.(js|jsx|css|json)$)": "<rootDir>/config/jest/fileTransform.js"
    },
    "transformIgnorePatterns": [
      "[/\\\\]node_modules[/\\\\].+\\.(js|jsx)$"
    ],
    "moduleNameMapper": {
      "^react-native$": "react-native-web"
    },
    "moduleFileExtensions": [
      "web.js",
      "js",
      "json",
      "web.jsx",
      "jsx"
    ]
  },
  "babel": {
    "presets": [
      "react-app"
    ]
  },
  "eslintConfig": {
    "extends": "react-app"
  }
}
